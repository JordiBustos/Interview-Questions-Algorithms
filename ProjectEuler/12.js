/*
Problem 12: Highly divisible triangular number
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
Let us list the factors of the first seven triangle numbers:

1: 1
3: 1, 3
6: 1, 2, 3, 6
10: 1, 2, 5, 10
15: 1, 3, 5, 15
21: 1, 3, 7, 21
28: 1, 2, 4, 7, 14, 28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over n divisors?

T_n = (n (n+1))/2
*/

function divisibleTriangleNumber(n) {
  let i = 1
  let currTriangle = 1
  let currDivisors = 0
  while (currDivisors < n){
    currTriangle = ((i * (i+1)) / 2)
    currDivisors = computeDivisors(currTriangle)
    i+=1
  }
  return currTriangle;
}

function computeDivisors(n){
  let count = 0
  for (let i = 1; i < Math.sqrt(n); i++)
    if (n % i === 0) count += 2;

  if (n % Math.sqrt(n) === 0) count += 1;
  return count
}

console.log(divisibleTriangleNumber(500));
